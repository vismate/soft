<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="614" onload="init(evt)" viewBox="0 0 1200 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="614" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="597.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="597.00"> </text><svg id="frames" x="10" width="1180" total_samples="234276"><g><title>GL_QueueDrawLines (63 samples, 0.03%)</title><rect x="0.0102%" y="517" width="0.0269%" height="15" fill="rgb(227,0,7)" fg:x="24" fg:w="63"/><text x="0.2602%" y="527.50"></text></g><g><title>PrepQueueCmdDraw (66 samples, 0.03%)</title><rect x="0.0376%" y="517" width="0.0282%" height="15" fill="rgb(217,0,24)" fg:x="88" fg:w="66"/><text x="0.2876%" y="527.50"></text></g><g><title>SDL_AllocateRenderVertices (59 samples, 0.03%)</title><rect x="0.0674%" y="517" width="0.0252%" height="15" fill="rgb(221,193,54)" fg:x="158" fg:w="59"/><text x="0.3174%" y="527.50"></text></g><g><title>SDL_RenderDrawLine_REAL (384 samples, 0.16%)</title><rect x="0.0956%" y="517" width="0.1639%" height="15" fill="rgb(248,212,6)" fg:x="224" fg:w="384"/><text x="0.3456%" y="527.50"></text></g><g><title>SDL_SetRenderDrawBlendMode_REAL (38 samples, 0.02%)</title><rect x="0.2621%" y="517" width="0.0162%" height="15" fill="rgb(208,68,35)" fg:x="614" fg:w="38"/><text x="0.5121%" y="527.50"></text></g><g><title>SetDrawState (743 samples, 0.32%)</title><rect x="0.2847%" y="517" width="0.3171%" height="15" fill="rgb(232,128,0)" fg:x="667" fg:w="743"/><text x="0.5347%" y="527.50"></text></g><g><title>[libGLX_nvidia.so.515.48.07] (26 samples, 0.01%)</title><rect x="0.6065%" y="517" width="0.0111%" height="15" fill="rgb(207,160,47)" fg:x="1421" fg:w="26"/><text x="0.8565%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (442 samples, 0.19%)</title><rect x="0.6228%" y="517" width="0.1887%" height="15" fill="rgb(228,23,34)" fg:x="1459" fg:w="442"/><text x="0.8728%" y="527.50"></text></g><g><title>_drawQuadrants (454 samples, 0.19%)</title><rect x="0.8234%" y="517" width="0.1938%" height="15" fill="rgb(218,30,26)" fg:x="1929" fg:w="454"/><text x="1.0734%" y="527.50"></text></g><g><title>atanf32 (34 samples, 0.01%)</title><rect x="1.0176%" y="517" width="0.0145%" height="15" fill="rgb(220,122,19)" fg:x="2384" fg:w="34"/><text x="1.2676%" y="527.50"></text></g><g><title>filledCircleColor (46 samples, 0.02%)</title><rect x="1.0330%" y="517" width="0.0196%" height="15" fill="rgb(250,228,42)" fg:x="2420" fg:w="46"/><text x="1.2830%" y="527.50"></text></g><g><title>lineColor (73 samples, 0.03%)</title><rect x="1.0560%" y="517" width="0.0312%" height="15" fill="rgb(240,193,28)" fg:x="2474" fg:w="73"/><text x="1.3060%" y="527.50"></text></g><g><title>lineRGBA (62 samples, 0.03%)</title><rect x="1.0872%" y="517" width="0.0265%" height="15" fill="rgb(216,20,37)" fg:x="2547" fg:w="62"/><text x="1.3372%" y="527.50"></text></g><g><title>[[heap]] (2,941 samples, 1.26%)</title><rect x="0.0090%" y="533" width="1.2554%" height="15" fill="rgb(206,188,39)" fg:x="21" fg:w="2941"/><text x="0.2590%" y="543.50"></text></g><g><title>vline (342 samples, 0.15%)</title><rect x="1.1183%" y="517" width="0.1460%" height="15" fill="rgb(217,207,13)" fg:x="2620" fg:w="342"/><text x="1.3683%" y="527.50"></text></g><g><title>GL_RunCommandQueue (1,995 samples, 0.85%)</title><rect x="1.2665%" y="517" width="0.8516%" height="15" fill="rgb(231,73,38)" fg:x="2967" fg:w="1995"/><text x="1.5165%" y="527.50"></text></g><g><title>SDL_AllocateRenderVertices (40 samples, 0.02%)</title><rect x="2.1248%" y="517" width="0.0171%" height="15" fill="rgb(225,20,46)" fg:x="4978" fg:w="40"/><text x="2.3748%" y="527.50"></text></g><g><title>[libGLX_nvidia.so.515.48.07] (39 samples, 0.02%)</title><rect x="2.1872%" y="517" width="0.0166%" height="15" fill="rgb(210,31,41)" fg:x="5124" fg:w="39"/><text x="2.4372%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (80 samples, 0.03%)</title><rect x="2.2166%" y="517" width="0.0341%" height="15" fill="rgb(221,200,47)" fg:x="5193" fg:w="80"/><text x="2.4666%" y="527.50"></text></g><g><title>_ellipseRGBA (177 samples, 0.08%)</title><rect x="2.2597%" y="517" width="0.0756%" height="15" fill="rgb(226,26,5)" fg:x="5294" fg:w="177"/><text x="2.5097%" y="527.50"></text></g><g><title>filledEllipseRGBA (42 samples, 0.02%)</title><rect x="2.3404%" y="517" width="0.0179%" height="15" fill="rgb(249,33,26)" fg:x="5483" fg:w="42"/><text x="2.5904%" y="527.50"></text></g><g><title>lineRGBA (228 samples, 0.10%)</title><rect x="2.3609%" y="517" width="0.0973%" height="15" fill="rgb(235,183,28)" fg:x="5531" fg:w="228"/><text x="2.6109%" y="527.50"></text></g><g><title>[[stack]] (2,822 samples, 1.20%)</title><rect x="1.2643%" y="533" width="1.2046%" height="15" fill="rgb(221,5,38)" fg:x="2962" fg:w="2822"/><text x="1.5143%" y="543.50"></text></g><g><title>[[vdso]] (99 samples, 0.04%)</title><rect x="2.4689%" y="533" width="0.0423%" height="15" fill="rgb(247,18,42)" fg:x="5784" fg:w="99"/><text x="2.7189%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (99 samples, 0.04%)</title><rect x="2.5193%" y="517" width="0.0423%" height="15" fill="rgb(241,131,45)" fg:x="5902" fg:w="99"/><text x="2.7693%" y="527.50"></text></g><g><title>[anon] (121 samples, 0.05%)</title><rect x="2.5111%" y="533" width="0.0516%" height="15" fill="rgb(249,31,29)" fg:x="5883" fg:w="121"/><text x="2.7611%" y="543.50"></text></g><g><title>[libGLdispatch.so.0.0.0] (1,943 samples, 0.83%)</title><rect x="2.5705%" y="533" width="0.8294%" height="15" fill="rgb(225,111,53)" fg:x="6022" fg:w="1943"/><text x="2.8205%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (86 samples, 0.04%)</title><rect x="3.4033%" y="517" width="0.0367%" height="15" fill="rgb(238,160,17)" fg:x="7973" fg:w="86"/><text x="3.6533%" y="527.50"></text></g><g><title>[libSDL2-2.0.so.0.18.1] (95 samples, 0.04%)</title><rect x="3.3998%" y="533" width="0.0406%" height="15" fill="rgb(214,148,48)" fg:x="7965" fg:w="95"/><text x="3.6498%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (4,179 samples, 1.78%)</title><rect x="3.4412%" y="533" width="1.7838%" height="15" fill="rgb(232,36,49)" fg:x="8062" fg:w="4179"/><text x="3.6912%" y="543.50">[..</text></g><g><title>GL_GetOutputSize (64 samples, 0.03%)</title><rect x="5.2323%" y="517" width="0.0273%" height="15" fill="rgb(209,103,24)" fg:x="12258" fg:w="64"/><text x="5.4823%" y="527.50"></text></g><g><title>[soft] (76 samples, 0.03%)</title><rect x="5.2323%" y="533" width="0.0324%" height="15" fill="rgb(229,88,8)" fg:x="12258" fg:w="76"/><text x="5.4823%" y="543.50"></text></g><g><title>GL_QueueDrawLines (1,501 samples, 0.64%)</title><rect x="5.2652%" y="517" width="0.6407%" height="15" fill="rgb(213,181,19)" fg:x="12335" fg:w="1501"/><text x="5.5152%" y="527.50"></text></g><g><title>PrepQueueCmdDraw (1,730 samples, 0.74%)</title><rect x="5.9063%" y="517" width="0.7384%" height="15" fill="rgb(254,191,54)" fg:x="13837" fg:w="1730"/><text x="6.1563%" y="527.50"></text></g><g><title>SDL_AllocateRenderVertices (2,126 samples, 0.91%)</title><rect x="6.6477%" y="517" width="0.9075%" height="15" fill="rgb(241,83,37)" fg:x="15574" fg:w="2126"/><text x="6.8977%" y="527.50"></text></g><g><title>SDL_RenderDrawLine_REAL (598 samples, 0.26%)</title><rect x="7.5595%" y="517" width="0.2553%" height="15" fill="rgb(233,36,39)" fg:x="17710" fg:w="598"/><text x="7.8095%" y="527.50"></text></g><g><title>SDL_SetRenderDrawBlendMode_REAL (169 samples, 0.07%)</title><rect x="7.8177%" y="517" width="0.0721%" height="15" fill="rgb(226,3,54)" fg:x="18315" fg:w="169"/><text x="8.0677%" y="527.50"></text></g><g><title>SDL_SetRenderDrawColor_REAL (64 samples, 0.03%)</title><rect x="7.8898%" y="517" width="0.0273%" height="15" fill="rgb(245,192,40)" fg:x="18484" fg:w="64"/><text x="8.1398%" y="527.50"></text></g><g><title>SetDrawState (1,301 samples, 0.56%)</title><rect x="7.9227%" y="517" width="0.5553%" height="15" fill="rgb(238,167,29)" fg:x="18561" fg:w="1301"/><text x="8.1727%" y="527.50"></text></g><g><title>[libGLX_nvidia.so.515.48.07] (44 samples, 0.02%)</title><rect x="8.4810%" y="517" width="0.0188%" height="15" fill="rgb(232,182,51)" fg:x="19869" fg:w="44"/><text x="8.7310%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (24 samples, 0.01%)</title><rect x="8.4896%" y="501" width="0.0102%" height="15" fill="rgb(231,60,39)" fg:x="19889" fg:w="24"/><text x="8.7396%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (24 samples, 0.01%)</title><rect x="8.4896%" y="485" width="0.0102%" height="15" fill="rgb(208,69,12)" fg:x="19889" fg:w="24"/><text x="8.7396%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (24 samples, 0.01%)</title><rect x="8.4896%" y="469" width="0.0102%" height="15" fill="rgb(235,93,37)" fg:x="19889" fg:w="24"/><text x="8.7396%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (24 samples, 0.01%)</title><rect x="8.4896%" y="453" width="0.0102%" height="15" fill="rgb(213,116,39)" fg:x="19889" fg:w="24"/><text x="8.7396%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (24 samples, 0.01%)</title><rect x="8.4896%" y="437" width="0.0102%" height="15" fill="rgb(222,207,29)" fg:x="19889" fg:w="24"/><text x="8.7396%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (24 samples, 0.01%)</title><rect x="8.4896%" y="421" width="0.0102%" height="15" fill="rgb(206,96,30)" fg:x="19889" fg:w="24"/><text x="8.7396%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (24 samples, 0.01%)</title><rect x="8.4896%" y="405" width="0.0102%" height="15" fill="rgb(218,138,4)" fg:x="19889" fg:w="24"/><text x="8.7396%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (24 samples, 0.01%)</title><rect x="8.4896%" y="389" width="0.0102%" height="15" fill="rgb(250,191,14)" fg:x="19889" fg:w="24"/><text x="8.7396%" y="399.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (24 samples, 0.01%)</title><rect x="8.4896%" y="373" width="0.0102%" height="15" fill="rgb(239,60,40)" fg:x="19889" fg:w="24"/><text x="8.7396%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (24 samples, 0.01%)</title><rect x="8.4896%" y="357" width="0.0102%" height="15" fill="rgb(206,27,48)" fg:x="19889" fg:w="24"/><text x="8.7396%" y="367.50"></text></g><g><title>[libc.so.6] (60 samples, 0.03%)</title><rect x="8.5024%" y="517" width="0.0256%" height="15" fill="rgb(225,35,8)" fg:x="19919" fg:w="60"/><text x="8.7524%" y="527.50"></text></g><g><title>[libm.so.6] (434 samples, 0.19%)</title><rect x="8.5280%" y="517" width="0.1853%" height="15" fill="rgb(250,213,24)" fg:x="19979" fg:w="434"/><text x="8.7780%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (651 samples, 0.28%)</title><rect x="8.7132%" y="517" width="0.2779%" height="15" fill="rgb(247,123,22)" fg:x="20413" fg:w="651"/><text x="8.9632%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (74 samples, 0.03%)</title><rect x="8.9595%" y="501" width="0.0316%" height="15" fill="rgb(231,138,38)" fg:x="20990" fg:w="74"/><text x="9.2095%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (55 samples, 0.02%)</title><rect x="8.9676%" y="485" width="0.0235%" height="15" fill="rgb(231,145,46)" fg:x="21009" fg:w="55"/><text x="9.2176%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (50 samples, 0.02%)</title><rect x="8.9698%" y="469" width="0.0213%" height="15" fill="rgb(251,118,11)" fg:x="21014" fg:w="50"/><text x="9.2198%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (40 samples, 0.02%)</title><rect x="8.9740%" y="453" width="0.0171%" height="15" fill="rgb(217,147,25)" fg:x="21024" fg:w="40"/><text x="9.2240%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (40 samples, 0.02%)</title><rect x="8.9740%" y="437" width="0.0171%" height="15" fill="rgb(247,81,37)" fg:x="21024" fg:w="40"/><text x="9.2240%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (40 samples, 0.02%)</title><rect x="8.9740%" y="421" width="0.0171%" height="15" fill="rgb(209,12,38)" fg:x="21024" fg:w="40"/><text x="9.2240%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (40 samples, 0.02%)</title><rect x="8.9740%" y="405" width="0.0171%" height="15" fill="rgb(227,1,9)" fg:x="21024" fg:w="40"/><text x="9.2240%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (40 samples, 0.02%)</title><rect x="8.9740%" y="389" width="0.0171%" height="15" fill="rgb(248,47,43)" fg:x="21024" fg:w="40"/><text x="9.2240%" y="399.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (40 samples, 0.02%)</title><rect x="8.9740%" y="373" width="0.0171%" height="15" fill="rgb(221,10,30)" fg:x="21024" fg:w="40"/><text x="9.2240%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (40 samples, 0.02%)</title><rect x="8.9740%" y="357" width="0.0171%" height="15" fill="rgb(210,229,1)" fg:x="21024" fg:w="40"/><text x="9.2240%" y="367.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (40 samples, 0.02%)</title><rect x="8.9740%" y="341" width="0.0171%" height="15" fill="rgb(222,148,37)" fg:x="21024" fg:w="40"/><text x="9.2240%" y="351.50"></text></g><g><title>__atan2f_finite (46 samples, 0.02%)</title><rect x="9.0022%" y="517" width="0.0196%" height="15" fill="rgb(234,67,33)" fg:x="21090" fg:w="46"/><text x="9.2522%" y="527.50"></text></g><g><title>_drawQuadrants (592 samples, 0.25%)</title><rect x="9.0257%" y="517" width="0.2527%" height="15" fill="rgb(247,98,35)" fg:x="21145" fg:w="592"/><text x="9.2757%" y="527.50"></text></g><g><title>_ellipseRGBA (57 samples, 0.02%)</title><rect x="9.2784%" y="517" width="0.0243%" height="15" fill="rgb(247,138,52)" fg:x="21737" fg:w="57"/><text x="9.5284%" y="527.50"></text></g><g><title>atan2f32 (426 samples, 0.18%)</title><rect x="9.3070%" y="517" width="0.1818%" height="15" fill="rgb(213,79,30)" fg:x="21804" fg:w="426"/><text x="9.5570%" y="527.50"></text></g><g><title>cfree (31 samples, 0.01%)</title><rect x="9.4944%" y="517" width="0.0132%" height="15" fill="rgb(246,177,23)" fg:x="22243" fg:w="31"/><text x="9.7444%" y="527.50"></text></g><g><title>filledPolygonRGBAMT (45 samples, 0.02%)</title><rect x="9.5272%" y="517" width="0.0192%" height="15" fill="rgb(230,62,27)" fg:x="22320" fg:w="45"/><text x="9.7772%" y="527.50"></text></g><g><title>hline (32 samples, 0.01%)</title><rect x="9.5473%" y="517" width="0.0137%" height="15" fill="rgb(216,154,8)" fg:x="22367" fg:w="32"/><text x="9.7973%" y="527.50"></text></g><g><title>lineColor (68 samples, 0.03%)</title><rect x="9.5609%" y="517" width="0.0290%" height="15" fill="rgb(244,35,45)" fg:x="22399" fg:w="68"/><text x="9.8109%" y="527.50"></text></g><g><title>lineRGBA (146 samples, 0.06%)</title><rect x="9.5900%" y="517" width="0.0623%" height="15" fill="rgb(251,115,12)" fg:x="22467" fg:w="146"/><text x="9.8400%" y="527.50"></text></g><g><title>std::rt::lang_start_internal (41 samples, 0.02%)</title><rect x="9.6621%" y="517" width="0.0175%" height="15" fill="rgb(240,54,50)" fg:x="22636" fg:w="41"/><text x="9.9121%" y="527.50"></text></g><g><title>std::panic::catch_unwind (41 samples, 0.02%)</title><rect x="9.6621%" y="501" width="0.0175%" height="15" fill="rgb(233,84,52)" fg:x="22636" fg:w="41"/><text x="9.9121%" y="511.50"></text></g><g><title>std::panicking::try (41 samples, 0.02%)</title><rect x="9.6621%" y="485" width="0.0175%" height="15" fill="rgb(207,117,47)" fg:x="22636" fg:w="41"/><text x="9.9121%" y="495.50"></text></g><g><title>std::panicking::try::do_call (41 samples, 0.02%)</title><rect x="9.6621%" y="469" width="0.0175%" height="15" fill="rgb(249,43,39)" fg:x="22636" fg:w="41"/><text x="9.9121%" y="479.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (41 samples, 0.02%)</title><rect x="9.6621%" y="453" width="0.0175%" height="15" fill="rgb(209,38,44)" fg:x="22636" fg:w="41"/><text x="9.9121%" y="463.50"></text></g><g><title>std::panic::catch_unwind (41 samples, 0.02%)</title><rect x="9.6621%" y="437" width="0.0175%" height="15" fill="rgb(236,212,23)" fg:x="22636" fg:w="41"/><text x="9.9121%" y="447.50"></text></g><g><title>std::panicking::try (41 samples, 0.02%)</title><rect x="9.6621%" y="421" width="0.0175%" height="15" fill="rgb(242,79,21)" fg:x="22636" fg:w="41"/><text x="9.9121%" y="431.50"></text></g><g><title>std::panicking::try::do_call (41 samples, 0.02%)</title><rect x="9.6621%" y="405" width="0.0175%" height="15" fill="rgb(211,96,35)" fg:x="22636" fg:w="41"/><text x="9.9121%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (41 samples, 0.02%)</title><rect x="9.6621%" y="389" width="0.0175%" height="15" fill="rgb(253,215,40)" fg:x="22636" fg:w="41"/><text x="9.9121%" y="399.50"></text></g><g><title>std::rt::lang_start::{{closure}} (41 samples, 0.02%)</title><rect x="9.6621%" y="373" width="0.0175%" height="15" fill="rgb(211,81,21)" fg:x="22636" fg:w="41"/><text x="9.9121%" y="383.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (41 samples, 0.02%)</title><rect x="9.6621%" y="357" width="0.0175%" height="15" fill="rgb(208,190,38)" fg:x="22636" fg:w="41"/><text x="9.9121%" y="367.50"></text></g><g><title>core::ops::function::FnOnce::call_once (41 samples, 0.02%)</title><rect x="9.6621%" y="341" width="0.0175%" height="15" fill="rgb(235,213,38)" fg:x="22636" fg:w="41"/><text x="9.9121%" y="351.50"></text></g><g><title>soft::main (41 samples, 0.02%)</title><rect x="9.6621%" y="325" width="0.0175%" height="15" fill="rgb(237,122,38)" fg:x="22636" fg:w="41"/><text x="9.9121%" y="335.50"></text></g><g><title>sdl2::render::Canvas&lt;T&gt;::present (41 samples, 0.02%)</title><rect x="9.6621%" y="309" width="0.0175%" height="15" fill="rgb(244,218,35)" fg:x="22636" fg:w="41"/><text x="9.9121%" y="319.50"></text></g><g><title>X11_GL_SwapWindow (32 samples, 0.01%)</title><rect x="9.6659%" y="293" width="0.0137%" height="15" fill="rgb(240,68,47)" fg:x="22645" fg:w="32"/><text x="9.9159%" y="303.50"></text></g><g><title>[libGLX_nvidia.so.515.48.07] (32 samples, 0.01%)</title><rect x="9.6659%" y="277" width="0.0137%" height="15" fill="rgb(210,16,53)" fg:x="22645" fg:w="32"/><text x="9.9159%" y="287.50"></text></g><g><title>[libGLX_nvidia.so.515.48.07] (32 samples, 0.01%)</title><rect x="9.6659%" y="261" width="0.0137%" height="15" fill="rgb(235,124,12)" fg:x="22645" fg:w="32"/><text x="9.9159%" y="271.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (32 samples, 0.01%)</title><rect x="9.6659%" y="245" width="0.0137%" height="15" fill="rgb(224,169,11)" fg:x="22645" fg:w="32"/><text x="9.9159%" y="255.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (32 samples, 0.01%)</title><rect x="9.6659%" y="229" width="0.0137%" height="15" fill="rgb(250,166,2)" fg:x="22645" fg:w="32"/><text x="9.9159%" y="239.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (32 samples, 0.01%)</title><rect x="9.6659%" y="213" width="0.0137%" height="15" fill="rgb(242,216,29)" fg:x="22645" fg:w="32"/><text x="9.9159%" y="223.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (32 samples, 0.01%)</title><rect x="9.6659%" y="197" width="0.0137%" height="15" fill="rgb(230,116,27)" fg:x="22645" fg:w="32"/><text x="9.9159%" y="207.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (32 samples, 0.01%)</title><rect x="9.6659%" y="181" width="0.0137%" height="15" fill="rgb(228,99,48)" fg:x="22645" fg:w="32"/><text x="9.9159%" y="191.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (32 samples, 0.01%)</title><rect x="9.6659%" y="165" width="0.0137%" height="15" fill="rgb(253,11,6)" fg:x="22645" fg:w="32"/><text x="9.9159%" y="175.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (32 samples, 0.01%)</title><rect x="9.6659%" y="149" width="0.0137%" height="15" fill="rgb(247,143,39)" fg:x="22645" fg:w="32"/><text x="9.9159%" y="159.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (32 samples, 0.01%)</title><rect x="9.6659%" y="133" width="0.0137%" height="15" fill="rgb(236,97,10)" fg:x="22645" fg:w="32"/><text x="9.9159%" y="143.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (32 samples, 0.01%)</title><rect x="9.6659%" y="117" width="0.0137%" height="15" fill="rgb(233,208,19)" fg:x="22645" fg:w="32"/><text x="9.9159%" y="127.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (32 samples, 0.01%)</title><rect x="9.6659%" y="101" width="0.0137%" height="15" fill="rgb(216,164,2)" fg:x="22645" fg:w="32"/><text x="9.9159%" y="111.50"></text></g><g><title>[unknown] (10,699 samples, 4.57%)</title><rect x="5.2647%" y="533" width="4.5668%" height="15" fill="rgb(220,129,5)" fg:x="12334" fg:w="10699"/><text x="5.5147%" y="543.50">[unkn..</text></g><g><title>vline (339 samples, 0.14%)</title><rect x="9.6869%" y="517" width="0.1447%" height="15" fill="rgb(242,17,10)" fg:x="22694" fg:w="339"/><text x="9.9369%" y="527.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (862 samples, 0.37%)</title><rect x="15.4647%" y="261" width="0.3679%" height="15" fill="rgb(242,107,0)" fg:x="36230" fg:w="862"/><text x="15.7147%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (28 samples, 0.01%)</title><rect x="15.8330%" y="261" width="0.0120%" height="15" fill="rgb(251,28,31)" fg:x="37093" fg:w="28"/><text x="16.0830%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (75 samples, 0.03%)</title><rect x="15.8450%" y="245" width="0.0320%" height="15" fill="rgb(233,223,10)" fg:x="37121" fg:w="75"/><text x="16.0950%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (151 samples, 0.06%)</title><rect x="15.8450%" y="261" width="0.0645%" height="15" fill="rgb(215,21,27)" fg:x="37121" fg:w="151"/><text x="16.0950%" y="271.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (76 samples, 0.03%)</title><rect x="15.8770%" y="245" width="0.0324%" height="15" fill="rgb(232,23,21)" fg:x="37196" fg:w="76"/><text x="16.1270%" y="255.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (76 samples, 0.03%)</title><rect x="15.8770%" y="229" width="0.0324%" height="15" fill="rgb(244,5,23)" fg:x="37196" fg:w="76"/><text x="16.1270%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (202 samples, 0.09%)</title><rect x="15.9094%" y="245" width="0.0862%" height="15" fill="rgb(226,81,46)" fg:x="37272" fg:w="202"/><text x="16.1594%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (530 samples, 0.23%)</title><rect x="15.9094%" y="261" width="0.2262%" height="15" fill="rgb(247,70,30)" fg:x="37272" fg:w="530"/><text x="16.1594%" y="271.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (328 samples, 0.14%)</title><rect x="15.9957%" y="245" width="0.1400%" height="15" fill="rgb(212,68,19)" fg:x="37474" fg:w="328"/><text x="16.2457%" y="255.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (328 samples, 0.14%)</title><rect x="15.9957%" y="229" width="0.1400%" height="15" fill="rgb(240,187,13)" fg:x="37474" fg:w="328"/><text x="16.2457%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (150 samples, 0.06%)</title><rect x="16.1357%" y="261" width="0.0640%" height="15" fill="rgb(223,113,26)" fg:x="37802" fg:w="150"/><text x="16.3857%" y="271.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (150 samples, 0.06%)</title><rect x="16.1357%" y="245" width="0.0640%" height="15" fill="rgb(206,192,2)" fg:x="37802" fg:w="150"/><text x="16.3857%" y="255.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (169 samples, 0.07%)</title><rect x="16.1997%" y="261" width="0.0721%" height="15" fill="rgb(241,108,4)" fg:x="37952" fg:w="169"/><text x="16.4497%" y="271.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,277 samples, 0.55%)</title><rect x="16.2718%" y="261" width="0.5451%" height="15" fill="rgb(247,173,49)" fg:x="38121" fg:w="1277"/><text x="16.5218%" y="271.50"></text></g><g><title>SDL_LockMutex_REAL (29 samples, 0.01%)</title><rect x="16.8464%" y="197" width="0.0124%" height="15" fill="rgb(224,114,35)" fg:x="39467" fg:w="29"/><text x="17.0964%" y="207.50"></text></g><g><title>SDL_PeepEvents_REAL.constprop.0 (61 samples, 0.03%)</title><rect x="16.8391%" y="213" width="0.0260%" height="15" fill="rgb(245,159,27)" fg:x="39450" fg:w="61"/><text x="17.0891%" y="223.50"></text></g><g><title>SDL_PrivateSendMouseMotion (33 samples, 0.01%)</title><rect x="16.8920%" y="197" width="0.0141%" height="15" fill="rgb(245,172,44)" fg:x="39574" fg:w="33"/><text x="17.1420%" y="207.50"></text></g><g><title>SDL_PushEvent_REAL (25 samples, 0.01%)</title><rect x="16.8955%" y="181" width="0.0107%" height="15" fill="rgb(236,23,11)" fg:x="39582" fg:w="25"/><text x="17.1455%" y="191.50"></text></g><g><title>SDL_PrivateSendMouseMotion (51 samples, 0.02%)</title><rect x="16.9177%" y="165" width="0.0218%" height="15" fill="rgb(205,117,38)" fg:x="39634" fg:w="51"/><text x="17.1677%" y="175.50"></text></g><g><title>SDL_PushEvent_REAL (42 samples, 0.02%)</title><rect x="16.9215%" y="149" width="0.0179%" height="15" fill="rgb(237,72,25)" fg:x="39643" fg:w="42"/><text x="17.1715%" y="159.50"></text></g><g><title>X11_HandleXinput2Event (75 samples, 0.03%)</title><rect x="16.9091%" y="181" width="0.0320%" height="15" fill="rgb(244,70,9)" fg:x="39614" fg:w="75"/><text x="17.1591%" y="191.50"></text></g><g><title>X11_UpdateKeymap (27 samples, 0.01%)</title><rect x="16.9411%" y="181" width="0.0115%" height="15" fill="rgb(217,125,39)" fg:x="39689" fg:w="27"/><text x="17.1911%" y="191.50"></text></g><g><title>X11_DispatchEvent (151 samples, 0.06%)</title><rect x="16.9066%" y="197" width="0.0645%" height="15" fill="rgb(235,36,10)" fg:x="39608" fg:w="151"/><text x="17.1566%" y="207.50"></text></g><g><title>[libX11.so.6.4.0] (38 samples, 0.02%)</title><rect x="16.9795%" y="181" width="0.0162%" height="15" fill="rgb(251,123,47)" fg:x="39779" fg:w="38"/><text x="17.2295%" y="191.50"></text></g><g><title>malloc (89 samples, 0.04%)</title><rect x="17.0521%" y="101" width="0.0380%" height="15" fill="rgb(221,13,13)" fg:x="39949" fg:w="89"/><text x="17.3021%" y="111.50"></text></g><g><title>[libc.so.6] (38 samples, 0.02%)</title><rect x="17.0739%" y="85" width="0.0162%" height="15" fill="rgb(238,131,9)" fg:x="40000" fg:w="38"/><text x="17.3239%" y="95.50"></text></g><g><title>[libxcb.so.1.1.0] (163 samples, 0.07%)</title><rect x="17.0316%" y="117" width="0.0696%" height="15" fill="rgb(211,50,8)" fg:x="39901" fg:w="163"/><text x="17.2816%" y="127.50"></text></g><g><title>recvmsg (25 samples, 0.01%)</title><rect x="17.0905%" y="101" width="0.0107%" height="15" fill="rgb(245,182,24)" fg:x="40039" fg:w="25"/><text x="17.3405%" y="111.50"></text></g><g><title>[libxcb.so.1.1.0] (212 samples, 0.09%)</title><rect x="17.0231%" y="133" width="0.0905%" height="15" fill="rgb(242,14,37)" fg:x="39881" fg:w="212"/><text x="17.2731%" y="143.50"></text></g><g><title>[libX11.so.6.4.0] (249 samples, 0.11%)</title><rect x="17.0141%" y="149" width="0.1063%" height="15" fill="rgb(246,228,12)" fg:x="39860" fg:w="249"/><text x="17.2641%" y="159.50"></text></g><g><title>__libc_calloc (33 samples, 0.01%)</title><rect x="17.1571%" y="117" width="0.0141%" height="15" fill="rgb(213,55,15)" fg:x="40195" fg:w="33"/><text x="17.4071%" y="127.50"></text></g><g><title>[libXi.so.6.1.0] (100 samples, 0.04%)</title><rect x="17.1324%" y="133" width="0.0427%" height="15" fill="rgb(209,9,3)" fg:x="40137" fg:w="100"/><text x="17.3824%" y="143.50"></text></g><g><title>_XEnq (132 samples, 0.06%)</title><rect x="17.1204%" y="149" width="0.0563%" height="15" fill="rgb(230,59,30)" fg:x="40109" fg:w="132"/><text x="17.3704%" y="159.50"></text></g><g><title>[libX11.so.6.4.0] (418 samples, 0.18%)</title><rect x="17.0077%" y="165" width="0.1784%" height="15" fill="rgb(209,121,21)" fg:x="39845" fg:w="418"/><text x="17.2577%" y="175.50"></text></g><g><title>_XEventsQueued (447 samples, 0.19%)</title><rect x="17.0017%" y="181" width="0.1908%" height="15" fill="rgb(220,109,13)" fg:x="39831" fg:w="447"/><text x="17.2517%" y="191.50"></text></g><g><title>XCheckIfEvent (536 samples, 0.23%)</title><rect x="16.9710%" y="197" width="0.2288%" height="15" fill="rgb(232,18,1)" fg:x="39759" fg:w="536"/><text x="17.2210%" y="207.50"></text></g><g><title>XFreeEventData (26 samples, 0.01%)</title><rect x="17.1998%" y="197" width="0.0111%" height="15" fill="rgb(215,41,42)" fg:x="40295" fg:w="26"/><text x="17.4498%" y="207.50"></text></g><g><title>SDL_WaitEventTimeout_REAL (914 samples, 0.39%)</title><rect x="16.8263%" y="229" width="0.3901%" height="15" fill="rgb(224,123,36)" fg:x="39420" fg:w="914"/><text x="17.0763%" y="239.50"></text></g><g><title>X11_PumpEvents (803 samples, 0.34%)</title><rect x="16.8737%" y="213" width="0.3428%" height="15" fill="rgb(240,125,3)" fg:x="39531" fg:w="803"/><text x="17.1237%" y="223.50"></text></g><g><title>&lt;sdl2::event::EventPollIterator as core::iter::traits::iterator::Iterator&gt;::next (944 samples, 0.40%)</title><rect x="16.8169%" y="261" width="0.4029%" height="15" fill="rgb(205,98,50)" fg:x="39398" fg:w="944"/><text x="17.0669%" y="271.50"></text></g><g><title>sdl2::event::poll_event (943 samples, 0.40%)</title><rect x="16.8173%" y="245" width="0.4025%" height="15" fill="rgb(205,185,37)" fg:x="39399" fg:w="943"/><text x="17.0673%" y="255.50"></text></g><g><title>SDL_SetRenderDrawBlendMode_REAL (38 samples, 0.02%)</title><rect x="21.5216%" y="197" width="0.0162%" height="15" fill="rgb(238,207,15)" fg:x="50420" fg:w="38"/><text x="21.7716%" y="207.50"></text></g><g><title>SDL_SetRenderDrawColor (38 samples, 0.02%)</title><rect x="21.5378%" y="197" width="0.0162%" height="15" fill="rgb(213,199,42)" fg:x="50458" fg:w="38"/><text x="21.7878%" y="207.50"></text></g><g><title>SDL_SetRenderDrawColor_REAL (69 samples, 0.03%)</title><rect x="21.5541%" y="197" width="0.0295%" height="15" fill="rgb(235,201,11)" fg:x="50496" fg:w="69"/><text x="21.8041%" y="207.50"></text></g><g><title>SDL_RenderDrawLine (345 samples, 0.15%)</title><rect x="22.0522%" y="165" width="0.1473%" height="15" fill="rgb(207,46,11)" fg:x="51663" fg:w="345"/><text x="22.3022%" y="175.50"></text></g><g><title>SDL_AllocateRenderVertices (2,362 samples, 1.01%)</title><rect x="27.1867%" y="133" width="1.0082%" height="15" fill="rgb(241,35,35)" fg:x="63692" fg:w="2362"/><text x="27.4367%" y="143.50"></text></g><g><title>SDL_atan2f_REAL (366 samples, 0.16%)</title><rect x="28.1949%" y="133" width="0.1562%" height="15" fill="rgb(243,32,47)" fg:x="66054" fg:w="366"/><text x="28.4449%" y="143.50"></text></g><g><title>SDL_cosf_REAL (313 samples, 0.13%)</title><rect x="28.3512%" y="133" width="0.1336%" height="15" fill="rgb(247,202,23)" fg:x="66420" fg:w="313"/><text x="28.6012%" y="143.50"></text></g><g><title>SDL_sinf_REAL (332 samples, 0.14%)</title><rect x="28.4848%" y="133" width="0.1417%" height="15" fill="rgb(219,102,11)" fg:x="66733" fg:w="332"/><text x="28.7348%" y="143.50"></text></g><g><title>[libm.so.6] (9,097 samples, 3.88%)</title><rect x="28.6265%" y="133" width="3.8830%" height="15" fill="rgb(243,110,44)" fg:x="67065" fg:w="9097"/><text x="28.8765%" y="143.50">[lib..</text></g><g><title>atan2f32 (4,656 samples, 1.99%)</title><rect x="32.5095%" y="133" width="1.9874%" height="15" fill="rgb(222,74,54)" fg:x="76162" fg:w="4656"/><text x="32.7595%" y="143.50">a..</text></g><g><title>__atan2f_finite (2,390 samples, 1.02%)</title><rect x="33.4768%" y="117" width="1.0202%" height="15" fill="rgb(216,99,12)" fg:x="78428" fg:w="2390"/><text x="33.7268%" y="127.50"></text></g><g><title>atan2f@plt (365 samples, 0.16%)</title><rect x="34.4969%" y="133" width="0.1558%" height="15" fill="rgb(226,22,26)" fg:x="80818" fg:w="365"/><text x="34.7469%" y="143.50"></text></g><g><title>cosf@plt (338 samples, 0.14%)</title><rect x="34.6527%" y="133" width="0.1443%" height="15" fill="rgb(217,163,10)" fg:x="81183" fg:w="338"/><text x="34.9027%" y="143.50"></text></g><g><title>GL_QueueDrawLines (26,232 samples, 11.20%)</title><rect x="23.7515%" y="149" width="11.1970%" height="15" fill="rgb(213,25,53)" fg:x="55644" fg:w="26232"/><text x="24.0015%" y="159.50">GL_QueueDrawLines</text></g><g><title>sinf@plt (355 samples, 0.15%)</title><rect x="34.7970%" y="133" width="0.1515%" height="15" fill="rgb(252,105,26)" fg:x="81521" fg:w="355"/><text x="35.0470%" y="143.50"></text></g><g><title>&lt;sdl2::render::Canvas&lt;T&gt; as sdl2::gfx::primitives::DrawRenderer&gt;::filled_circle (47,218 samples, 20.15%)</title><rect x="17.2199%" y="261" width="20.1549%" height="15" fill="rgb(220,39,43)" fg:x="40342" fg:w="47218"/><text x="17.4699%" y="271.50">&lt;sdl2::render::Canvas&lt;T&gt; as sdl2..</text></g><g><title>filledCircleColor (47,183 samples, 20.14%)</title><rect x="17.2348%" y="245" width="20.1399%" height="15" fill="rgb(229,68,48)" fg:x="40377" fg:w="47183"/><text x="17.4848%" y="255.50">filledCircleColor</text></g><g><title>filledEllipseRGBA (47,104 samples, 20.11%)</title><rect x="17.2685%" y="229" width="20.1062%" height="15" fill="rgb(252,8,32)" fg:x="40456" fg:w="47104"/><text x="17.5185%" y="239.50">filledEllipseRGBA</text></g><g><title>_ellipseRGBA (47,049 samples, 20.08%)</title><rect x="17.2920%" y="213" width="20.0827%" height="15" fill="rgb(223,20,43)" fg:x="40511" fg:w="47049"/><text x="17.5420%" y="223.50">_ellipseRGBA</text></g><g><title>_drawQuadrants (36,995 samples, 15.79%)</title><rect x="21.5835%" y="197" width="15.7912%" height="15" fill="rgb(229,81,49)" fg:x="50565" fg:w="36995"/><text x="21.8335%" y="207.50">_drawQuadrants</text></g><g><title>vline (36,219 samples, 15.46%)</title><rect x="21.9148%" y="181" width="15.4600%" height="15" fill="rgb(236,28,36)" fg:x="51341" fg:w="36219"/><text x="22.1648%" y="191.50">vline</text></g><g><title>SDL_RenderDrawLine_REAL (35,552 samples, 15.18%)</title><rect x="22.1995%" y="165" width="15.1753%" height="15" fill="rgb(249,185,26)" fg:x="52008" fg:w="35552"/><text x="22.4495%" y="175.50">SDL_RenderDrawLine_REAL</text></g><g><title>PrepQueueCmdDraw (5,684 samples, 2.43%)</title><rect x="34.9485%" y="149" width="2.4262%" height="15" fill="rgb(249,174,33)" fg:x="81876" fg:w="5684"/><text x="35.1985%" y="159.50">Pr..</text></g><g><title>SDL_RenderDrawLine (72 samples, 0.03%)</title><rect x="37.7252%" y="213" width="0.0307%" height="15" fill="rgb(233,201,37)" fg:x="88381" fg:w="72"/><text x="37.9752%" y="223.50"></text></g><g><title>SDL_AllocateRenderVertices (270 samples, 0.12%)</title><rect x="38.7244%" y="181" width="0.1152%" height="15" fill="rgb(221,78,26)" fg:x="90722" fg:w="270"/><text x="38.9744%" y="191.50"></text></g><g><title>SDL_atan2f_REAL (84 samples, 0.04%)</title><rect x="38.8397%" y="181" width="0.0359%" height="15" fill="rgb(250,127,30)" fg:x="90992" fg:w="84"/><text x="39.0897%" y="191.50"></text></g><g><title>SDL_cosf_REAL (72 samples, 0.03%)</title><rect x="38.8755%" y="181" width="0.0307%" height="15" fill="rgb(230,49,44)" fg:x="91076" fg:w="72"/><text x="39.1255%" y="191.50"></text></g><g><title>SDL_sinf_REAL (70 samples, 0.03%)</title><rect x="38.9062%" y="181" width="0.0299%" height="15" fill="rgb(229,67,23)" fg:x="91148" fg:w="70"/><text x="39.1562%" y="191.50"></text></g><g><title>[libm.so.6] (2,698 samples, 1.15%)</title><rect x="38.9361%" y="181" width="1.1516%" height="15" fill="rgb(249,83,47)" fg:x="91218" fg:w="2698"/><text x="39.1861%" y="191.50"></text></g><g><title>__atan2f_finite (4,949 samples, 2.11%)</title><rect x="40.2990%" y="165" width="2.1125%" height="15" fill="rgb(215,43,3)" fg:x="94411" fg:w="4949"/><text x="40.5490%" y="175.50">_..</text></g><g><title>atanf32 (3,983 samples, 1.70%)</title><rect x="40.7114%" y="149" width="1.7001%" height="15" fill="rgb(238,154,13)" fg:x="95377" fg:w="3983"/><text x="40.9614%" y="159.50"></text></g><g><title>atan2f32 (5,497 samples, 2.35%)</title><rect x="40.0878%" y="181" width="2.3464%" height="15" fill="rgb(219,56,2)" fg:x="93916" fg:w="5497"/><text x="40.3378%" y="191.50">a..</text></g><g><title>atanf32 (53 samples, 0.02%)</title><rect x="42.4115%" y="165" width="0.0226%" height="15" fill="rgb(233,0,4)" fg:x="99360" fg:w="53"/><text x="42.6615%" y="175.50"></text></g><g><title>atan2f@plt (81 samples, 0.03%)</title><rect x="42.4341%" y="181" width="0.0346%" height="15" fill="rgb(235,30,7)" fg:x="99413" fg:w="81"/><text x="42.6841%" y="191.50"></text></g><g><title>cosf@plt (62 samples, 0.03%)</title><rect x="42.4687%" y="181" width="0.0265%" height="15" fill="rgb(250,79,13)" fg:x="99494" fg:w="62"/><text x="42.7187%" y="191.50"></text></g><g><title>GL_QueueDrawLines (10,365 samples, 4.42%)</title><rect x="38.1016%" y="197" width="4.4243%" height="15" fill="rgb(211,146,34)" fg:x="89263" fg:w="10365"/><text x="38.3516%" y="207.50">GL_Qu..</text></g><g><title>sinf@plt (72 samples, 0.03%)</title><rect x="42.4952%" y="181" width="0.0307%" height="15" fill="rgb(228,22,38)" fg:x="99556" fg:w="72"/><text x="42.7452%" y="191.50"></text></g><g><title>SDL_RenderDrawLine_REAL (12,559 samples, 5.36%)</title><rect x="37.7559%" y="213" width="5.3608%" height="15" fill="rgb(235,168,5)" fg:x="88453" fg:w="12559"/><text x="38.0059%" y="223.50">SDL_Ren..</text></g><g><title>PrepQueueCmdDraw (1,384 samples, 0.59%)</title><rect x="42.5259%" y="197" width="0.5908%" height="15" fill="rgb(221,155,16)" fg:x="99628" fg:w="1384"/><text x="42.7759%" y="207.50"></text></g><g><title>SDL_SetRenderDrawBlendMode (70 samples, 0.03%)</title><rect x="43.1167%" y="213" width="0.0299%" height="15" fill="rgb(215,215,53)" fg:x="101012" fg:w="70"/><text x="43.3667%" y="223.50"></text></g><g><title>SDL_SetRenderDrawBlendMode_REAL (216 samples, 0.09%)</title><rect x="43.1465%" y="213" width="0.0922%" height="15" fill="rgb(223,4,10)" fg:x="101082" fg:w="216"/><text x="43.3965%" y="223.50"></text></g><g><title>SDL_SetRenderDrawColor (147 samples, 0.06%)</title><rect x="43.2387%" y="213" width="0.0627%" height="15" fill="rgb(234,103,6)" fg:x="101298" fg:w="147"/><text x="43.4887%" y="223.50"></text></g><g><title>lineColor (13,944 samples, 5.95%)</title><rect x="37.4353%" y="245" width="5.9520%" height="15" fill="rgb(227,97,0)" fg:x="87702" fg:w="13944"/><text x="37.6853%" y="255.50">lineColor</text></g><g><title>lineRGBA (13,684 samples, 5.84%)</title><rect x="37.5463%" y="229" width="5.8410%" height="15" fill="rgb(234,150,53)" fg:x="87962" fg:w="13684"/><text x="37.7963%" y="239.50">lineRGBA</text></g><g><title>SDL_SetRenderDrawColor_REAL (201 samples, 0.09%)</title><rect x="43.3015%" y="213" width="0.0858%" height="15" fill="rgb(228,201,54)" fg:x="101445" fg:w="201"/><text x="43.5515%" y="223.50"></text></g><g><title>&lt;sdl2::render::Canvas&lt;T&gt; as sdl2::gfx::primitives::DrawRenderer&gt;::line (14,139 samples, 6.04%)</title><rect x="37.3747%" y="261" width="6.0352%" height="15" fill="rgb(222,22,37)" fg:x="87560" fg:w="14139"/><text x="37.6247%" y="271.50">&lt;sdl2::r..</text></g><g><title>sdl2::render::Canvas&lt;T&gt;::raw (53 samples, 0.02%)</title><rect x="43.3873%" y="245" width="0.0226%" height="15" fill="rgb(237,53,32)" fg:x="101646" fg:w="53"/><text x="43.6373%" y="255.50"></text></g><g><title>sdl2::render::RendererContext&lt;T&gt;::raw (53 samples, 0.02%)</title><rect x="43.3873%" y="229" width="0.0226%" height="15" fill="rgb(233,25,53)" fg:x="101646" fg:w="53"/><text x="43.6373%" y="239.50"></text></g><g><title>&lt;sdl2::render::Canvas&lt;T&gt; as sdl2::gfx::primitives::DrawRenderer&gt;::string (33 samples, 0.01%)</title><rect x="43.4150%" y="261" width="0.0141%" height="15" fill="rgb(210,40,34)" fg:x="101711" fg:w="33"/><text x="43.6650%" y="271.50"></text></g><g><title>stringColor (29 samples, 0.01%)</title><rect x="43.4167%" y="245" width="0.0124%" height="15" fill="rgb(241,220,44)" fg:x="101715" fg:w="29"/><text x="43.6667%" y="255.50"></text></g><g><title>stringRGBA (29 samples, 0.01%)</title><rect x="43.4167%" y="229" width="0.0124%" height="15" fill="rgb(235,28,35)" fg:x="101715" fg:w="29"/><text x="43.6667%" y="239.50"></text></g><g><title>characterRGBA (26 samples, 0.01%)</title><rect x="43.4180%" y="213" width="0.0111%" height="15" fill="rgb(210,56,17)" fg:x="101718" fg:w="26"/><text x="43.6680%" y="223.50"></text></g><g><title>[libm.so.6] (34 samples, 0.01%)</title><rect x="43.4445%" y="213" width="0.0145%" height="15" fill="rgb(224,130,29)" fg:x="101780" fg:w="34"/><text x="43.6945%" y="223.50"></text></g><g><title>atan2f32x (64 samples, 0.03%)</title><rect x="43.4611%" y="213" width="0.0273%" height="15" fill="rgb(235,212,8)" fg:x="101819" fg:w="64"/><text x="43.7111%" y="223.50"></text></g><g><title>[libm.so.6] (53 samples, 0.02%)</title><rect x="43.4658%" y="197" width="0.0226%" height="15" fill="rgb(223,33,50)" fg:x="101830" fg:w="53"/><text x="43.7158%" y="207.50"></text></g><g><title>SDL_SetRenderDrawBlendMode_REAL (75 samples, 0.03%)</title><rect x="44.1663%" y="181" width="0.0320%" height="15" fill="rgb(219,149,13)" fg:x="103471" fg:w="75"/><text x="44.4163%" y="191.50"></text></g><g><title>SDL_SetRenderDrawColor (32 samples, 0.01%)</title><rect x="44.1983%" y="181" width="0.0137%" height="15" fill="rgb(250,156,29)" fg:x="103546" fg:w="32"/><text x="44.4483%" y="191.50"></text></g><g><title>SDL_SetRenderDrawColor_REAL (89 samples, 0.04%)</title><rect x="44.2120%" y="181" width="0.0380%" height="15" fill="rgb(216,193,19)" fg:x="103578" fg:w="89"/><text x="44.4620%" y="191.50"></text></g><g><title>SDL_AllocateRenderVertices (103 samples, 0.04%)</title><rect x="44.5236%" y="133" width="0.0440%" height="15" fill="rgb(216,135,14)" fg:x="104308" fg:w="103"/><text x="44.7736%" y="143.50"></text></g><g><title>SDL_atan2f_REAL (27 samples, 0.01%)</title><rect x="44.5675%" y="133" width="0.0115%" height="15" fill="rgb(241,47,5)" fg:x="104411" fg:w="27"/><text x="44.8175%" y="143.50"></text></g><g><title>[libm.so.6] (112 samples, 0.05%)</title><rect x="44.5936%" y="133" width="0.0478%" height="15" fill="rgb(233,42,35)" fg:x="104472" fg:w="112"/><text x="44.8436%" y="143.50"></text></g><g><title>atan2f32 (247 samples, 0.11%)</title><rect x="44.6414%" y="133" width="0.1054%" height="15" fill="rgb(231,13,6)" fg:x="104584" fg:w="247"/><text x="44.8914%" y="143.50"></text></g><g><title>__atan2f_finite (118 samples, 0.05%)</title><rect x="44.6964%" y="117" width="0.0504%" height="15" fill="rgb(207,181,40)" fg:x="104713" fg:w="118"/><text x="44.9464%" y="127.50"></text></g><g><title>cosf@plt (27 samples, 0.01%)</title><rect x="44.7536%" y="133" width="0.0115%" height="15" fill="rgb(254,173,49)" fg:x="104847" fg:w="27"/><text x="45.0036%" y="143.50"></text></g><g><title>GL_QueueDrawLines (958 samples, 0.41%)</title><rect x="44.3678%" y="149" width="0.4089%" height="15" fill="rgb(221,1,38)" fg:x="103943" fg:w="958"/><text x="44.6178%" y="159.50"></text></g><g><title>sinf@plt (27 samples, 0.01%)</title><rect x="44.7651%" y="133" width="0.0115%" height="15" fill="rgb(206,124,46)" fg:x="104874" fg:w="27"/><text x="45.0151%" y="143.50"></text></g><g><title>hline (1,643 samples, 0.70%)</title><rect x="44.2499%" y="181" width="0.7013%" height="15" fill="rgb(249,21,11)" fg:x="103667" fg:w="1643"/><text x="44.4999%" y="191.50"></text></g><g><title>SDL_RenderDrawLine_REAL (1,606 samples, 0.69%)</title><rect x="44.2657%" y="165" width="0.6855%" height="15" fill="rgb(222,201,40)" fg:x="103704" fg:w="1606"/><text x="44.5157%" y="175.50"></text></g><g><title>PrepQueueCmdDraw (409 samples, 0.17%)</title><rect x="44.7767%" y="149" width="0.1746%" height="15" fill="rgb(235,61,29)" fg:x="104901" fg:w="409"/><text x="45.0267%" y="159.50"></text></g><g><title>qsort (30 samples, 0.01%)</title><rect x="44.9513%" y="181" width="0.0128%" height="15" fill="rgb(219,207,3)" fg:x="105310" fg:w="30"/><text x="45.2013%" y="191.50"></text></g><g><title>[libc.so.6] (396 samples, 0.17%)</title><rect x="45.1160%" y="165" width="0.1690%" height="15" fill="rgb(222,56,46)" fg:x="105696" fg:w="396"/><text x="45.3660%" y="175.50"></text></g><g><title>_gfxPrimitivesCompareInt (25 samples, 0.01%)</title><rect x="45.2744%" y="149" width="0.0107%" height="15" fill="rgb(239,76,54)" fg:x="106067" fg:w="25"/><text x="45.5244%" y="159.50"></text></g><g><title>&lt;sdl2::render::Canvas&lt;T&gt; as sdl2::gfx::primitives::DrawRenderer&gt;::thick_line (4,370 samples, 1.87%)</title><rect x="43.4291%" y="261" width="1.8653%" height="15" fill="rgb(231,124,27)" fg:x="101744" fg:w="4370"/><text x="43.6791%" y="271.50">&lt;..</text></g><g><title>thickLineColor (4,368 samples, 1.86%)</title><rect x="43.4300%" y="245" width="1.8645%" height="15" fill="rgb(249,195,6)" fg:x="101746" fg:w="4368"/><text x="43.6800%" y="255.50">t..</text></g><g><title>thickLineRGBA (4,366 samples, 1.86%)</title><rect x="43.4308%" y="229" width="1.8636%" height="15" fill="rgb(237,174,47)" fg:x="101748" fg:w="4366"/><text x="43.6808%" y="239.50">t..</text></g><g><title>filledPolygonRGBA (4,231 samples, 1.81%)</title><rect x="43.4884%" y="213" width="1.8060%" height="15" fill="rgb(206,201,31)" fg:x="101883" fg:w="4231"/><text x="43.7384%" y="223.50">f..</text></g><g><title>filledPolygonRGBAMT (4,231 samples, 1.81%)</title><rect x="43.4884%" y="197" width="1.8060%" height="15" fill="rgb(231,57,52)" fg:x="101883" fg:w="4231"/><text x="43.7384%" y="207.50">f..</text></g><g><title>qsort_r (774 samples, 0.33%)</title><rect x="44.9641%" y="181" width="0.3304%" height="15" fill="rgb(248,177,22)" fg:x="105340" fg:w="774"/><text x="45.2141%" y="191.50"></text></g><g><title>SDL_GetTicks_REAL (30 samples, 0.01%)</title><rect x="45.2979%" y="261" width="0.0128%" height="15" fill="rgb(215,211,37)" fg:x="106122" fg:w="30"/><text x="45.5479%" y="271.50"></text></g><g><title>SDL_GetTicks64_REAL (30 samples, 0.01%)</title><rect x="45.2979%" y="245" width="0.0128%" height="15" fill="rgb(241,128,51)" fg:x="106122" fg:w="30"/><text x="45.5479%" y="255.50"></text></g><g><title>__nanosleep (41 samples, 0.02%)</title><rect x="45.3252%" y="229" width="0.0175%" height="15" fill="rgb(227,165,31)" fg:x="106186" fg:w="41"/><text x="45.5752%" y="239.50"></text></g><g><title>clock_nanosleep (34 samples, 0.01%)</title><rect x="45.3282%" y="213" width="0.0145%" height="15" fill="rgb(228,167,24)" fg:x="106193" fg:w="34"/><text x="45.5782%" y="223.50"></text></g><g><title>SDL_Delay_REAL (63 samples, 0.03%)</title><rect x="45.3166%" y="245" width="0.0269%" height="15" fill="rgb(228,143,12)" fg:x="106166" fg:w="63"/><text x="45.5666%" y="255.50"></text></g><g><title>SDL_framerateDelay (97 samples, 0.04%)</title><rect x="45.3107%" y="261" width="0.0414%" height="15" fill="rgb(249,149,8)" fg:x="106152" fg:w="97"/><text x="45.5607%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (923 samples, 0.39%)</title><rect x="45.3670%" y="261" width="0.3940%" height="15" fill="rgb(243,35,44)" fg:x="106284" fg:w="923"/><text x="45.6170%" y="271.50"></text></g><g><title>core::ptr::write (621 samples, 0.27%)</title><rect x="45.4959%" y="245" width="0.2651%" height="15" fill="rgb(246,89,9)" fg:x="106586" fg:w="621"/><text x="45.7459%" y="255.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (190 samples, 0.08%)</title><rect x="45.7610%" y="261" width="0.0811%" height="15" fill="rgb(233,213,13)" fg:x="107207" fg:w="190"/><text x="46.0110%" y="271.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (190 samples, 0.08%)</title><rect x="45.7610%" y="245" width="0.0811%" height="15" fill="rgb(233,141,41)" fg:x="107207" fg:w="190"/><text x="46.0110%" y="255.50"></text></g><g><title>GL_GetOutputSize (313 samples, 0.13%)</title><rect x="45.9168%" y="245" width="0.1336%" height="15" fill="rgb(239,167,4)" fg:x="107572" fg:w="313"/><text x="46.1668%" y="255.50"></text></g><g><title>SDL_GL_GetDrawableSize_REAL (258 samples, 0.11%)</title><rect x="45.9403%" y="229" width="0.1101%" height="15" fill="rgb(209,217,16)" fg:x="107627" fg:w="258"/><text x="46.1903%" y="239.50"></text></g><g><title>SDL_GetRendererOutputSize (83 samples, 0.04%)</title><rect x="46.0504%" y="245" width="0.0354%" height="15" fill="rgb(219,88,35)" fg:x="107885" fg:w="83"/><text x="46.3004%" y="255.50"></text></g><g><title>sdl2::render::Canvas&lt;T&gt;::output_size (710 samples, 0.30%)</title><rect x="45.8545%" y="261" width="0.3031%" height="15" fill="rgb(220,193,23)" fg:x="107426" fg:w="710"/><text x="46.1045%" y="271.50"></text></g><g><title>SDL_GetRendererOutputSize_REAL (168 samples, 0.07%)</title><rect x="46.0858%" y="245" width="0.0717%" height="15" fill="rgb(230,90,52)" fg:x="107968" fg:w="168"/><text x="46.3358%" y="255.50"></text></g><g><title>GL_ActivateRenderer (32 samples, 0.01%)</title><rect x="48.0369%" y="213" width="0.0137%" height="15" fill="rgb(252,106,19)" fg:x="112539" fg:w="32"/><text x="48.2869%" y="223.50"></text></g><g><title>SetDrawState (2,626 samples, 1.12%)</title><rect x="48.0536%" y="213" width="1.1209%" height="15" fill="rgb(206,74,20)" fg:x="112578" fg:w="2626"/><text x="48.3036%" y="223.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (91 samples, 0.04%)</title><rect x="49.1356%" y="197" width="0.0388%" height="15" fill="rgb(230,138,44)" fg:x="115113" fg:w="91"/><text x="49.3856%" y="207.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (68 samples, 0.03%)</title><rect x="49.1455%" y="181" width="0.0290%" height="15" fill="rgb(235,182,43)" fg:x="115136" fg:w="68"/><text x="49.3955%" y="191.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (52 samples, 0.02%)</title><rect x="49.1523%" y="165" width="0.0222%" height="15" fill="rgb(242,16,51)" fg:x="115152" fg:w="52"/><text x="49.4023%" y="175.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (35 samples, 0.01%)</title><rect x="49.1595%" y="149" width="0.0149%" height="15" fill="rgb(248,9,4)" fg:x="115169" fg:w="35"/><text x="49.4095%" y="159.50"></text></g><g><title>[libc.so.6] (158 samples, 0.07%)</title><rect x="58.1319%" y="149" width="0.0674%" height="15" fill="rgb(210,31,22)" fg:x="136189" fg:w="158"/><text x="58.3819%" y="159.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (37 samples, 0.02%)</title><rect x="58.4307%" y="53" width="0.0158%" height="15" fill="rgb(239,54,39)" fg:x="136889" fg:w="37"/><text x="58.6807%" y="63.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (213 samples, 0.09%)</title><rect x="58.3560%" y="117" width="0.0909%" height="15" fill="rgb(230,99,41)" fg:x="136714" fg:w="213"/><text x="58.6060%" y="127.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (97 samples, 0.04%)</title><rect x="58.4055%" y="101" width="0.0414%" height="15" fill="rgb(253,106,12)" fg:x="136830" fg:w="97"/><text x="58.6555%" y="111.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (60 samples, 0.03%)</title><rect x="58.4213%" y="85" width="0.0256%" height="15" fill="rgb(213,46,41)" fg:x="136867" fg:w="60"/><text x="58.6713%" y="95.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (51 samples, 0.02%)</title><rect x="58.4251%" y="69" width="0.0218%" height="15" fill="rgb(215,133,35)" fg:x="136876" fg:w="51"/><text x="58.6751%" y="79.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (382 samples, 0.16%)</title><rect x="58.2915%" y="133" width="0.1631%" height="15" fill="rgb(213,28,5)" fg:x="136563" fg:w="382"/><text x="58.5415%" y="143.50"></text></g><g><title>__libc_calloc (201 samples, 0.09%)</title><rect x="58.4546%" y="133" width="0.0858%" height="15" fill="rgb(215,77,49)" fg:x="136945" fg:w="201"/><text x="58.7046%" y="143.50"></text></g><g><title>[libc.so.6] (72 samples, 0.03%)</title><rect x="58.5096%" y="117" width="0.0307%" height="15" fill="rgb(248,100,22)" fg:x="137074" fg:w="72"/><text x="58.7596%" y="127.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (812 samples, 0.35%)</title><rect x="58.1993%" y="149" width="0.3466%" height="15" fill="rgb(208,67,9)" fg:x="136347" fg:w="812"/><text x="58.4493%" y="159.50"></text></g><g><title>cfree (43 samples, 0.02%)</title><rect x="58.5459%" y="149" width="0.0184%" height="15" fill="rgb(219,133,21)" fg:x="137159" fg:w="43"/><text x="58.7959%" y="159.50"></text></g><g><title>[libc.so.6] (38 samples, 0.02%)</title><rect x="58.5480%" y="133" width="0.0162%" height="15" fill="rgb(246,46,29)" fg:x="137164" fg:w="38"/><text x="58.7980%" y="143.50"></text></g><g><title>memcpy (34 samples, 0.01%)</title><rect x="58.5643%" y="149" width="0.0145%" height="15" fill="rgb(246,185,52)" fg:x="137202" fg:w="34"/><text x="58.8143%" y="159.50"></text></g><g><title>memcpy@plt (42 samples, 0.02%)</title><rect x="58.5788%" y="149" width="0.0179%" height="15" fill="rgb(252,136,11)" fg:x="137236" fg:w="42"/><text x="58.8288%" y="159.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (2,240 samples, 0.96%)</title><rect x="57.6453%" y="165" width="0.9561%" height="15" fill="rgb(219,138,53)" fg:x="135049" fg:w="2240"/><text x="57.8953%" y="175.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (22,077 samples, 9.42%)</title><rect x="49.1783%" y="213" width="9.4235%" height="15" fill="rgb(211,51,23)" fg:x="115213" fg:w="22077"/><text x="49.4283%" y="223.50">[libnvidia-gl..</text></g><g><title>[libnvidia-glcore.so.515.48.07] (5,675 samples, 2.42%)</title><rect x="56.1795%" y="197" width="2.4224%" height="15" fill="rgb(247,221,28)" fg:x="131615" fg:w="5675"/><text x="56.4295%" y="207.50">[l..</text></g><g><title>[libnvidia-glcore.so.515.48.07] (2,792 samples, 1.19%)</title><rect x="57.4101%" y="181" width="1.1918%" height="15" fill="rgb(251,222,45)" fg:x="134498" fg:w="2792"/><text x="57.6601%" y="191.50"></text></g><g><title>SDL_RenderPresent_REAL (29,133 samples, 12.44%)</title><rect x="46.1673%" y="245" width="12.4353%" height="15" fill="rgb(217,162,53)" fg:x="108159" fg:w="29133"/><text x="46.4173%" y="255.50">SDL_RenderPresent_R..</text></g><g><title>GL_RunCommandQueue (29,119 samples, 12.43%)</title><rect x="46.1733%" y="229" width="12.4294%" height="15" fill="rgb(229,93,14)" fg:x="108173" fg:w="29119"/><text x="46.4233%" y="239.50">GL_RunCommandQueue</text></g><g><title>[libGLX_nvidia.so.515.48.07] (44 samples, 0.02%)</title><rect x="58.6402%" y="181" width="0.0188%" height="15" fill="rgb(209,67,49)" fg:x="137380" fg:w="44"/><text x="58.8902%" y="191.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (25 samples, 0.01%)</title><rect x="58.6483%" y="165" width="0.0107%" height="15" fill="rgb(213,87,29)" fg:x="137399" fg:w="25"/><text x="58.8983%" y="175.50"></text></g><g><title>[libGLX_nvidia.so.515.48.07] (59 samples, 0.03%)</title><rect x="58.6343%" y="197" width="0.0252%" height="15" fill="rgb(205,151,52)" fg:x="137366" fg:w="59"/><text x="58.8843%" y="207.50"></text></g><g><title>[libGLX_nvidia.so.515.48.07] (30 samples, 0.01%)</title><rect x="58.7166%" y="181" width="0.0128%" height="15" fill="rgb(253,215,39)" fg:x="137559" fg:w="30"/><text x="58.9666%" y="191.50"></text></g><g><title>[libGLX_nvidia.so.515.48.07] (50 samples, 0.02%)</title><rect x="58.7854%" y="165" width="0.0213%" height="15" fill="rgb(221,220,41)" fg:x="137720" fg:w="50"/><text x="59.0354%" y="175.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (42 samples, 0.02%)</title><rect x="58.7888%" y="149" width="0.0179%" height="15" fill="rgb(218,133,21)" fg:x="137728" fg:w="42"/><text x="59.0388%" y="159.50"></text></g><g><title>[libGLX_nvidia.so.515.48.07] (51 samples, 0.02%)</title><rect x="58.8788%" y="149" width="0.0218%" height="15" fill="rgb(221,193,43)" fg:x="137939" fg:w="51"/><text x="59.1288%" y="159.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (37 samples, 0.02%)</title><rect x="58.8848%" y="133" width="0.0158%" height="15" fill="rgb(240,128,52)" fg:x="137953" fg:w="37"/><text x="59.1348%" y="143.50"></text></g><g><title>[libc.so.6] (30 samples, 0.01%)</title><rect x="59.3736%" y="69" width="0.0128%" height="15" fill="rgb(253,114,12)" fg:x="139098" fg:w="30"/><text x="59.6236%" y="79.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (34 samples, 0.01%)</title><rect x="59.4687%" y="37" width="0.0145%" height="15" fill="rgb(215,223,47)" fg:x="139321" fg:w="34"/><text x="59.7187%" y="47.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (137 samples, 0.06%)</title><rect x="59.4363%" y="53" width="0.0585%" height="15" fill="rgb(248,225,23)" fg:x="139245" fg:w="137"/><text x="59.6863%" y="63.50"></text></g><g><title>pthread_rwlock_unlock (26 samples, 0.01%)</title><rect x="59.4991%" y="53" width="0.0111%" height="15" fill="rgb(250,108,0)" fg:x="139392" fg:w="26"/><text x="59.7491%" y="63.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (308 samples, 0.13%)</title><rect x="59.3864%" y="69" width="0.1315%" height="15" fill="rgb(228,208,7)" fg:x="139128" fg:w="308"/><text x="59.6364%" y="79.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (885 samples, 0.38%)</title><rect x="59.1623%" y="85" width="0.3778%" height="15" fill="rgb(244,45,10)" fg:x="138603" fg:w="885"/><text x="59.4123%" y="95.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (1,038 samples, 0.44%)</title><rect x="59.1081%" y="101" width="0.4431%" height="15" fill="rgb(207,125,25)" fg:x="138476" fg:w="1038"/><text x="59.3581%" y="111.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (1,171 samples, 0.50%)</title><rect x="59.0526%" y="117" width="0.4998%" height="15" fill="rgb(210,195,18)" fg:x="138346" fg:w="1171"/><text x="59.3026%" y="127.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (1,341 samples, 0.57%)</title><rect x="58.9826%" y="133" width="0.5724%" height="15" fill="rgb(249,80,12)" fg:x="138182" fg:w="1341"/><text x="59.2326%" y="143.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (1,530 samples, 0.65%)</title><rect x="58.9057%" y="149" width="0.6531%" height="15" fill="rgb(221,65,9)" fg:x="138002" fg:w="1530"/><text x="59.1557%" y="159.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (1,773 samples, 0.76%)</title><rect x="58.8071%" y="165" width="0.7568%" height="15" fill="rgb(235,49,36)" fg:x="137771" fg:w="1773"/><text x="59.0571%" y="175.50"></text></g><g><title>[libGLX_nvidia.so.515.48.07] (2,248 samples, 0.96%)</title><rect x="58.6082%" y="229" width="0.9596%" height="15" fill="rgb(225,32,20)" fg:x="137305" fg:w="2248"/><text x="58.8582%" y="239.50"></text></g><g><title>[libGLX_nvidia.so.515.48.07] (2,243 samples, 0.96%)</title><rect x="58.6104%" y="213" width="0.9574%" height="15" fill="rgb(215,141,46)" fg:x="137310" fg:w="2243"/><text x="58.8604%" y="223.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (2,128 samples, 0.91%)</title><rect x="58.6594%" y="197" width="0.9083%" height="15" fill="rgb(250,160,47)" fg:x="137425" fg:w="2128"/><text x="58.9094%" y="207.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (1,964 samples, 0.84%)</title><rect x="58.7294%" y="181" width="0.8383%" height="15" fill="rgb(216,222,40)" fg:x="137589" fg:w="1964"/><text x="58.9794%" y="191.50"></text></g><g><title>[libGLX.so.0.0.0] (45 samples, 0.02%)</title><rect x="59.5853%" y="197" width="0.0192%" height="15" fill="rgb(234,217,39)" fg:x="139594" fg:w="45"/><text x="59.8353%" y="207.50"></text></g><g><title>[libGLX.so.0.0.0] (106 samples, 0.05%)</title><rect x="59.5725%" y="213" width="0.0452%" height="15" fill="rgb(207,178,40)" fg:x="139564" fg:w="106"/><text x="59.8225%" y="223.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (26 samples, 0.01%)</title><rect x="59.6531%" y="181" width="0.0111%" height="15" fill="rgb(221,136,13)" fg:x="139753" fg:w="26"/><text x="59.9031%" y="191.50"></text></g><g><title>[libGLX_nvidia.so.515.48.07] (85 samples, 0.04%)</title><rect x="59.6356%" y="197" width="0.0363%" height="15" fill="rgb(249,199,10)" fg:x="139712" fg:w="85"/><text x="59.8856%" y="207.50"></text></g><g><title>[libGLX_nvidia.so.515.48.07] (152 samples, 0.06%)</title><rect x="59.6177%" y="213" width="0.0649%" height="15" fill="rgb(249,222,13)" fg:x="139670" fg:w="152"/><text x="59.8677%" y="223.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (25 samples, 0.01%)</title><rect x="59.6719%" y="197" width="0.0107%" height="15" fill="rgb(244,185,38)" fg:x="139797" fg:w="25"/><text x="59.9219%" y="207.50"></text></g><g><title>[libGLX_nvidia.so.515.48.07] (39 samples, 0.02%)</title><rect x="59.7010%" y="197" width="0.0166%" height="15" fill="rgb(236,202,9)" fg:x="139865" fg:w="39"/><text x="59.9510%" y="207.50"></text></g><g><title>[libGLX_nvidia.so.515.48.07] (28 samples, 0.01%)</title><rect x="59.7231%" y="181" width="0.0120%" height="15" fill="rgb(250,229,37)" fg:x="139917" fg:w="28"/><text x="59.9731%" y="191.50"></text></g><g><title>[libnvidia-glcore.so.515.48.07] (39 samples, 0.02%)</title><rect x="59.7214%" y="197" width="0.0166%" height="15" fill="rgb(206,174,23)" fg:x="139913" fg:w="39"/><text x="59.9714%" y="207.50"></text></g><g><title>__glDispatchCheckMultithreaded (130 samples, 0.06%)</title><rect x="59.6894%" y="213" width="0.0555%" height="15" fill="rgb(211,33,43)" fg:x="139838" fg:w="130"/><text x="59.9394%" y="223.50"></text></g><g><title>sdl2::render::Canvas&lt;T&gt;::present (31,834 samples, 13.59%)</title><rect x="46.1575%" y="261" width="13.5882%" height="15" fill="rgb(245,58,50)" fg:x="108136" fg:w="31834"/><text x="46.4075%" y="271.50">sdl2::render::Canvas&lt;..</text></g><g><title>X11_GL_SwapWindow (2,678 samples, 1.14%)</title><rect x="58.6027%" y="245" width="1.1431%" height="15" fill="rgb(244,68,36)" fg:x="137292" fg:w="2678"/><text x="58.8527%" y="255.50"></text></g><g><title>glXSwapBuffers (417 samples, 0.18%)</title><rect x="59.5678%" y="229" width="0.1780%" height="15" fill="rgb(232,229,15)" fg:x="139553" fg:w="417"/><text x="59.8178%" y="239.50"></text></g><g><title>soft::bucket (6,648 samples, 2.84%)</title><rect x="59.7692%" y="261" width="2.8377%" height="15" fill="rgb(254,30,23)" fg:x="140025" fg:w="6648"/><text x="60.0192%" y="271.50">so..</text></g><g><title>&lt;soft::vec2::Vec2 as core::ops::arith::Add&gt;::add (133 samples, 0.06%)</title><rect x="63.1465%" y="245" width="0.0568%" height="15" fill="rgb(235,160,14)" fg:x="147937" fg:w="133"/><text x="63.3965%" y="255.50"></text></g><g><title>&lt;soft::vec2::Vec2 as core::ops::arith::Add&gt;::add::{{closure}} (133 samples, 0.06%)</title><rect x="63.1465%" y="229" width="0.0568%" height="15" fill="rgb(212,155,44)" fg:x="147937" fg:w="133"/><text x="63.3965%" y="239.50"></text></g><g><title>&lt;soft::vec2::Vec2 as core::ops::arith::Sub&gt;::sub (73 samples, 0.03%)</title><rect x="63.2165%" y="245" width="0.0312%" height="15" fill="rgb(226,2,50)" fg:x="148101" fg:w="73"/><text x="63.4665%" y="255.50"></text></g><g><title>&lt;soft::vec2::Vec2 as core::ops::arith::Sub&gt;::sub::{{closure}} (73 samples, 0.03%)</title><rect x="63.2165%" y="229" width="0.0312%" height="15" fill="rgb(234,177,6)" fg:x="148101" fg:w="73"/><text x="63.4665%" y="239.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::clamp (435 samples, 0.19%)</title><rect x="63.2476%" y="245" width="0.1857%" height="15" fill="rgb(217,24,9)" fg:x="148174" fg:w="435"/><text x="63.4976%" y="255.50"></text></g><g><title>soft::vec2::&lt;impl core::ops::arith::Mul&lt;soft::vec2::Vec2&gt; for f64&gt;::mul (229 samples, 0.10%)</title><rect x="63.4333%" y="245" width="0.0977%" height="15" fill="rgb(220,13,46)" fg:x="148609" fg:w="229"/><text x="63.6833%" y="255.50"></text></g><g><title>soft::vec2::&lt;impl core::ops::arith::Mul&lt;soft::vec2::Vec2&gt; for f64&gt;::mul::{{closure}} (229 samples, 0.10%)</title><rect x="63.4333%" y="229" width="0.0977%" height="15" fill="rgb(239,221,27)" fg:x="148609" fg:w="229"/><text x="63.6833%" y="239.50"></text></g><g><title>soft::vec2::Vec2::dist_sqr (508 samples, 0.22%)</title><rect x="63.5310%" y="229" width="0.2168%" height="15" fill="rgb(222,198,25)" fg:x="148838" fg:w="508"/><text x="63.7810%" y="239.50"></text></g><g><title>soft::vec2::Vec2::dist (1,465 samples, 0.63%)</title><rect x="63.5310%" y="245" width="0.6253%" height="15" fill="rgb(211,99,13)" fg:x="148838" fg:w="1465"/><text x="63.7810%" y="255.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (957 samples, 0.41%)</title><rect x="63.7479%" y="229" width="0.4085%" height="15" fill="rgb(232,111,31)" fg:x="149346" fg:w="957"/><text x="63.9979%" y="239.50"></text></g><g><title>soft::vec2::Vec2::len_sqr (220 samples, 0.09%)</title><rect x="64.1564%" y="245" width="0.0939%" height="15" fill="rgb(245,82,37)" fg:x="150303" fg:w="220"/><text x="64.4064%" y="255.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (32 samples, 0.01%)</title><rect x="64.2567%" y="213" width="0.0137%" height="15" fill="rgb(227,149,46)" fg:x="150538" fg:w="32"/><text x="64.5067%" y="223.50"></text></g><g><title>soft::vec2::Vec2::normal (103 samples, 0.04%)</title><rect x="64.2503%" y="245" width="0.0440%" height="15" fill="rgb(218,36,50)" fg:x="150523" fg:w="103"/><text x="64.5003%" y="255.50"></text></g><g><title>soft::vec2::Vec2::normalize (103 samples, 0.04%)</title><rect x="64.2503%" y="229" width="0.0440%" height="15" fill="rgb(226,80,48)" fg:x="150523" fg:w="103"/><text x="64.5003%" y="239.50"></text></g><g><title>soft::vec2::Vec2::len (56 samples, 0.02%)</title><rect x="64.2703%" y="213" width="0.0239%" height="15" fill="rgb(238,224,15)" fg:x="150570" fg:w="56"/><text x="64.5203%" y="223.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (56 samples, 0.02%)</title><rect x="64.2703%" y="197" width="0.0239%" height="15" fill="rgb(241,136,10)" fg:x="150570" fg:w="56"/><text x="64.5203%" y="207.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (34 samples, 0.01%)</title><rect x="64.3053%" y="229" width="0.0145%" height="15" fill="rgb(208,32,45)" fg:x="150652" fg:w="34"/><text x="64.5553%" y="239.50"></text></g><g><title>soft::vec2::Vec2::normalize (148 samples, 0.06%)</title><rect x="64.2943%" y="245" width="0.0632%" height="15" fill="rgb(207,135,9)" fg:x="150626" fg:w="148"/><text x="64.5443%" y="255.50"></text></g><g><title>soft::vec2::Vec2::len (88 samples, 0.04%)</title><rect x="64.3199%" y="229" width="0.0376%" height="15" fill="rgb(206,86,44)" fg:x="150686" fg:w="88"/><text x="64.5699%" y="239.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (66 samples, 0.03%)</title><rect x="64.3293%" y="213" width="0.0282%" height="15" fill="rgb(245,177,15)" fg:x="150708" fg:w="66"/><text x="64.5793%" y="223.50"></text></g><g><title>soft::collide_edge (4,155 samples, 1.77%)</title><rect x="62.6069%" y="261" width="1.7735%" height="15" fill="rgb(206,64,50)" fg:x="146673" fg:w="4155"/><text x="62.8569%" y="271.50">s..</text></g><g><title>soft::vec2::Vec2::reflect (54 samples, 0.02%)</title><rect x="64.3574%" y="245" width="0.0230%" height="15" fill="rgb(234,36,40)" fg:x="150774" fg:w="54"/><text x="64.6074%" y="255.50"></text></g><g><title>&lt;soft::vec2::Vec2 as core::ops::arith::Add&gt;::add (24 samples, 0.01%)</title><rect x="78.2368%" y="245" width="0.0102%" height="15" fill="rgb(213,64,8)" fg:x="183290" fg:w="24"/><text x="78.4868%" y="255.50"></text></g><g><title>&lt;soft::vec2::Vec2 as core::ops::arith::Add&gt;::add::{{closure}} (24 samples, 0.01%)</title><rect x="78.2368%" y="229" width="0.0102%" height="15" fill="rgb(210,75,36)" fg:x="183290" fg:w="24"/><text x="78.4868%" y="239.50"></text></g><g><title>&lt;soft::vec2::Vec2 as core::ops::arith::AddAssign&gt;::add_assign (45 samples, 0.02%)</title><rect x="78.2470%" y="245" width="0.0192%" height="15" fill="rgb(229,88,21)" fg:x="183314" fg:w="45"/><text x="78.4970%" y="255.50"></text></g><g><title>&lt;soft::vec2::Vec2 as core::ops::arith::AddAssign&gt;::add_assign::{{closure}} (45 samples, 0.02%)</title><rect x="78.2470%" y="229" width="0.0192%" height="15" fill="rgb(252,204,47)" fg:x="183314" fg:w="45"/><text x="78.4970%" y="239.50"></text></g><g><title>&lt;soft::vec2::Vec2 as core::ops::arith::Mul&lt;f64&gt;&gt;::mul (35 samples, 0.01%)</title><rect x="78.2662%" y="245" width="0.0149%" height="15" fill="rgb(208,77,27)" fg:x="183359" fg:w="35"/><text x="78.5162%" y="255.50"></text></g><g><title>&lt;soft::vec2::Vec2 as core::ops::arith::Mul&lt;f64&gt;&gt;::mul::{{closure}} (35 samples, 0.01%)</title><rect x="78.2662%" y="229" width="0.0149%" height="15" fill="rgb(221,76,26)" fg:x="183359" fg:w="35"/><text x="78.5162%" y="239.50"></text></g><g><title>&lt;soft::vec2::Vec2 as core::ops::arith::Sub&gt;::sub (11,305 samples, 4.83%)</title><rect x="78.2812%" y="245" width="4.8255%" height="15" fill="rgb(225,139,18)" fg:x="183394" fg:w="11305"/><text x="78.5312%" y="255.50">&lt;soft:..</text></g><g><title>&lt;soft::vec2::Vec2 as core::ops::arith::Sub&gt;::sub::{{closure}} (11,305 samples, 4.83%)</title><rect x="78.2812%" y="229" width="4.8255%" height="15" fill="rgb(230,137,11)" fg:x="183394" fg:w="11305"/><text x="78.5312%" y="239.50">&lt;soft:..</text></g><g><title>soft::vec2::&lt;impl core::ops::arith::Mul&lt;soft::vec2::Vec2&gt; for f64&gt;::mul (91 samples, 0.04%)</title><rect x="83.1084%" y="245" width="0.0388%" height="15" fill="rgb(212,28,1)" fg:x="194703" fg:w="91"/><text x="83.3584%" y="255.50"></text></g><g><title>soft::vec2::&lt;impl core::ops::arith::Mul&lt;soft::vec2::Vec2&gt; for f64&gt;::mul::{{closure}} (91 samples, 0.04%)</title><rect x="83.1084%" y="229" width="0.0388%" height="15" fill="rgb(248,164,17)" fg:x="194703" fg:w="91"/><text x="83.3584%" y="239.50"></text></g><g><title>soft::vec2::Vec2::dot (86 samples, 0.04%)</title><rect x="83.1472%" y="245" width="0.0367%" height="15" fill="rgb(222,171,42)" fg:x="194794" fg:w="86"/><text x="83.3972%" y="255.50"></text></g><g><title>soft::vec2::Vec2::len_sqr (20,939 samples, 8.94%)</title><rect x="83.1839%" y="245" width="8.9377%" height="15" fill="rgb(243,84,45)" fg:x="194880" fg:w="20939"/><text x="83.4339%" y="255.50">soft::vec2::V..</text></g><g><title>&lt;soft::vec2::Vec2 as core::ops::arith::Mul&lt;f64&gt;&gt;::mul (64 samples, 0.03%)</title><rect x="92.1584%" y="229" width="0.0273%" height="15" fill="rgb(252,49,23)" fg:x="215905" fg:w="64"/><text x="92.4084%" y="239.50"></text></g><g><title>&lt;soft::vec2::Vec2 as core::ops::arith::Mul&lt;f64&gt;&gt;::mul::{{closure}} (64 samples, 0.03%)</title><rect x="92.1584%" y="213" width="0.0273%" height="15" fill="rgb(215,19,7)" fg:x="215905" fg:w="64"/><text x="92.4084%" y="223.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (122 samples, 0.05%)</title><rect x="92.1857%" y="229" width="0.0521%" height="15" fill="rgb(238,81,41)" fg:x="215969" fg:w="122"/><text x="92.4357%" y="239.50"></text></g><g><title>soft::vec2::Vec2::len_sqr (91 samples, 0.04%)</title><rect x="92.2378%" y="213" width="0.0388%" height="15" fill="rgb(210,199,37)" fg:x="216091" fg:w="91"/><text x="92.4878%" y="223.50"></text></g><g><title>soft::collide_particle (65,556 samples, 27.98%)</title><rect x="64.3805%" y="261" width="27.9824%" height="15" fill="rgb(244,192,49)" fg:x="150828" fg:w="65556"/><text x="64.6305%" y="271.50">soft::collide_particle</text></g><g><title>soft::vec2::Vec2::normalize (565 samples, 0.24%)</title><rect x="92.1217%" y="245" width="0.2412%" height="15" fill="rgb(226,211,11)" fg:x="215819" fg:w="565"/><text x="92.3717%" y="255.50"></text></g><g><title>soft::vec2::Vec2::len (293 samples, 0.13%)</title><rect x="92.2378%" y="229" width="0.1251%" height="15" fill="rgb(236,162,54)" fg:x="216091" fg:w="293"/><text x="92.4878%" y="239.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (202 samples, 0.09%)</title><rect x="92.2766%" y="213" width="0.0862%" height="15" fill="rgb(220,229,9)" fg:x="216182" fg:w="202"/><text x="92.5266%" y="223.50"></text></g><g><title>soft::constrain (517 samples, 0.22%)</title><rect x="92.3629%" y="261" width="0.2207%" height="15" fill="rgb(250,87,22)" fg:x="216384" fg:w="517"/><text x="92.6129%" y="271.50"></text></g><g><title>&lt;soft::vec2::Vec2 as core::ops::arith::Add&gt;::add (571 samples, 0.24%)</title><rect x="92.5835%" y="245" width="0.2437%" height="15" fill="rgb(239,43,17)" fg:x="216901" fg:w="571"/><text x="92.8335%" y="255.50"></text></g><g><title>&lt;soft::vec2::Vec2 as core::ops::arith::Add&gt;::add::{{closure}} (571 samples, 0.24%)</title><rect x="92.5835%" y="229" width="0.2437%" height="15" fill="rgb(231,177,25)" fg:x="216901" fg:w="571"/><text x="92.8335%" y="239.50"></text></g><g><title>&lt;soft::vec2::Vec2 as core::ops::arith::AddAssign&gt;::add_assign (1,173 samples, 0.50%)</title><rect x="92.8273%" y="245" width="0.5007%" height="15" fill="rgb(219,179,1)" fg:x="217472" fg:w="1173"/><text x="93.0773%" y="255.50"></text></g><g><title>&lt;soft::vec2::Vec2 as core::ops::arith::AddAssign&gt;::add_assign::{{closure}} (1,173 samples, 0.50%)</title><rect x="92.8273%" y="229" width="0.5007%" height="15" fill="rgb(238,219,53)" fg:x="217472" fg:w="1173"/><text x="93.0773%" y="239.50"></text></g><g><title>soft::integrate (2,901 samples, 1.24%)</title><rect x="92.5835%" y="261" width="1.2383%" height="15" fill="rgb(232,167,36)" fg:x="216901" fg:w="2901"/><text x="92.8335%" y="271.50"></text></g><g><title>&lt;soft::vec2::Vec2 as core::ops::arith::Mul&lt;f64&gt;&gt;::mul (1,157 samples, 0.49%)</title><rect x="93.3280%" y="245" width="0.4939%" height="15" fill="rgb(244,19,51)" fg:x="218645" fg:w="1157"/><text x="93.5780%" y="255.50"></text></g><g><title>&lt;soft::vec2::Vec2 as core::ops::arith::Mul&lt;f64&gt;&gt;::mul::{{closure}} (1,157 samples, 0.49%)</title><rect x="93.3280%" y="229" width="0.4939%" height="15" fill="rgb(224,6,22)" fg:x="218645" fg:w="1157"/><text x="93.5780%" y="239.50"></text></g><g><title>soft::main (545 samples, 0.23%)</title><rect x="93.8218%" y="261" width="0.2326%" height="15" fill="rgb(224,145,5)" fg:x="219802" fg:w="545"/><text x="94.0718%" y="271.50"></text></g><g><title>&lt;soft::vec2::Vec2 as core::ops::arith::AddAssign&gt;::add_assign (2,959 samples, 1.26%)</title><rect x="95.7110%" y="245" width="1.2630%" height="15" fill="rgb(234,130,49)" fg:x="224228" fg:w="2959"/><text x="95.9610%" y="255.50"></text></g><g><title>&lt;soft::vec2::Vec2 as core::ops::arith::AddAssign&gt;::add_assign::{{closure}} (2,959 samples, 1.26%)</title><rect x="95.7110%" y="229" width="1.2630%" height="15" fill="rgb(254,6,2)" fg:x="224228" fg:w="2959"/><text x="95.9610%" y="239.50"></text></g><g><title>&lt;soft::vec2::Vec2 as core::ops::arith::Sub&gt;::sub (111 samples, 0.05%)</title><rect x="96.9741%" y="245" width="0.0474%" height="15" fill="rgb(208,96,46)" fg:x="227187" fg:w="111"/><text x="97.2241%" y="255.50"></text></g><g><title>&lt;soft::vec2::Vec2 as core::ops::arith::Sub&gt;::sub::{{closure}} (111 samples, 0.05%)</title><rect x="96.9741%" y="229" width="0.0474%" height="15" fill="rgb(239,3,39)" fg:x="227187" fg:w="111"/><text x="97.2241%" y="239.50"></text></g><g><title>&lt;soft::vec2::Vec2 as core::ops::arith::SubAssign&gt;::sub_assign (492 samples, 0.21%)</title><rect x="97.0215%" y="245" width="0.2100%" height="15" fill="rgb(233,210,1)" fg:x="227298" fg:w="492"/><text x="97.2715%" y="255.50"></text></g><g><title>&lt;soft::vec2::Vec2 as core::ops::arith::SubAssign&gt;::sub_assign::{{closure}} (492 samples, 0.21%)</title><rect x="97.0215%" y="229" width="0.2100%" height="15" fill="rgb(244,137,37)" fg:x="227298" fg:w="492"/><text x="97.2715%" y="239.50"></text></g><g><title>soft::vec2::&lt;impl core::ops::arith::Mul&lt;soft::vec2::Vec2&gt; for f64&gt;::mul (2,694 samples, 1.15%)</title><rect x="97.2315%" y="245" width="1.1499%" height="15" fill="rgb(240,136,2)" fg:x="227790" fg:w="2694"/><text x="97.4815%" y="255.50"></text></g><g><title>soft::vec2::&lt;impl core::ops::arith::Mul&lt;soft::vec2::Vec2&gt; for f64&gt;::mul::{{closure}} (2,694 samples, 1.15%)</title><rect x="97.2315%" y="229" width="1.1499%" height="15" fill="rgb(239,18,37)" fg:x="227790" fg:w="2694"/><text x="97.4815%" y="239.50"></text></g><g><title>soft::vec2::Vec2::dot (729 samples, 0.31%)</title><rect x="98.3814%" y="245" width="0.3112%" height="15" fill="rgb(218,185,22)" fg:x="230484" fg:w="729"/><text x="98.6314%" y="255.50"></text></g><g><title>&lt;soft::vec2::Vec2 as core::ops::arith::Mul&lt;f64&gt;&gt;::mul (602 samples, 0.26%)</title><rect x="98.9418%" y="229" width="0.2570%" height="15" fill="rgb(225,218,4)" fg:x="231797" fg:w="602"/><text x="99.1918%" y="239.50"></text></g><g><title>&lt;soft::vec2::Vec2 as core::ops::arith::Mul&lt;f64&gt;&gt;::mul::{{closure}} (602 samples, 0.26%)</title><rect x="98.9418%" y="213" width="0.2570%" height="15" fill="rgb(230,182,32)" fg:x="231797" fg:w="602"/><text x="99.1918%" y="223.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (531 samples, 0.23%)</title><rect x="99.1988%" y="229" width="0.2267%" height="15" fill="rgb(242,56,43)" fg:x="232399" fg:w="531"/><text x="99.4488%" y="239.50"></text></g><g><title>soft::vec2::Vec2::len_sqr (1,056 samples, 0.45%)</title><rect x="99.4272%" y="213" width="0.4508%" height="15" fill="rgb(233,99,24)" fg:x="232934" fg:w="1056"/><text x="99.6772%" y="223.50"></text></g><g><title>soft::update_spring (13,764 samples, 5.88%)</title><rect x="94.0549%" y="261" width="5.8751%" height="15" fill="rgb(234,209,42)" fg:x="220348" fg:w="13764"/><text x="94.3049%" y="271.50">soft::u..</text></g><g><title>soft::vec2::Vec2::normalize (2,899 samples, 1.24%)</title><rect x="98.6926%" y="245" width="1.2374%" height="15" fill="rgb(227,7,12)" fg:x="231213" fg:w="2899"/><text x="98.9426%" y="255.50"></text></g><g><title>soft::vec2::Vec2::len (1,182 samples, 0.50%)</title><rect x="99.4255%" y="229" width="0.5045%" height="15" fill="rgb(245,203,43)" fg:x="232930" fg:w="1182"/><text x="99.6755%" y="239.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (122 samples, 0.05%)</title><rect x="99.8779%" y="213" width="0.0521%" height="15" fill="rgb(238,205,33)" fg:x="233990" fg:w="122"/><text x="100.1279%" y="223.50"></text></g><g><title>_start (211,070 samples, 90.09%)</title><rect x="9.8363%" y="533" width="90.0946%" height="15" fill="rgb(231,56,7)" fg:x="23044" fg:w="211070"/><text x="10.0863%" y="543.50">_start</text></g><g><title>__libc_start_main (211,070 samples, 90.09%)</title><rect x="9.8363%" y="517" width="90.0946%" height="15" fill="rgb(244,186,29)" fg:x="23044" fg:w="211070"/><text x="10.0863%" y="527.50">__libc_start_main</text></g><g><title>[libc.so.6] (211,070 samples, 90.09%)</title><rect x="9.8363%" y="501" width="90.0946%" height="15" fill="rgb(234,111,31)" fg:x="23044" fg:w="211070"/><text x="10.0863%" y="511.50">[libc.so.6]</text></g><g><title>main (211,070 samples, 90.09%)</title><rect x="9.8363%" y="485" width="90.0946%" height="15" fill="rgb(241,149,10)" fg:x="23044" fg:w="211070"/><text x="10.0863%" y="495.50">main</text></g><g><title>std::rt::lang_start_internal (211,070 samples, 90.09%)</title><rect x="9.8363%" y="469" width="90.0946%" height="15" fill="rgb(249,206,44)" fg:x="23044" fg:w="211070"/><text x="10.0863%" y="479.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (211,070 samples, 90.09%)</title><rect x="9.8363%" y="453" width="90.0946%" height="15" fill="rgb(251,153,30)" fg:x="23044" fg:w="211070"/><text x="10.0863%" y="463.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (211,070 samples, 90.09%)</title><rect x="9.8363%" y="437" width="90.0946%" height="15" fill="rgb(239,152,38)" fg:x="23044" fg:w="211070"/><text x="10.0863%" y="447.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (211,070 samples, 90.09%)</title><rect x="9.8363%" y="421" width="90.0946%" height="15" fill="rgb(249,139,47)" fg:x="23044" fg:w="211070"/><text x="10.0863%" y="431.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (211,070 samples, 90.09%)</title><rect x="9.8363%" y="405" width="90.0946%" height="15" fill="rgb(244,64,35)" fg:x="23044" fg:w="211070"/><text x="10.0863%" y="415.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (211,070 samples, 90.09%)</title><rect x="9.8363%" y="389" width="90.0946%" height="15" fill="rgb(216,46,15)" fg:x="23044" fg:w="211070"/><text x="10.0863%" y="399.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (211,070 samples, 90.09%)</title><rect x="9.8363%" y="373" width="90.0946%" height="15" fill="rgb(250,74,19)" fg:x="23044" fg:w="211070"/><text x="10.0863%" y="383.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (211,070 samples, 90.09%)</title><rect x="9.8363%" y="357" width="90.0946%" height="15" fill="rgb(249,42,33)" fg:x="23044" fg:w="211070"/><text x="10.0863%" y="367.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (211,070 samples, 90.09%)</title><rect x="9.8363%" y="341" width="90.0946%" height="15" fill="rgb(242,149,17)" fg:x="23044" fg:w="211070"/><text x="10.0863%" y="351.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (211,070 samples, 90.09%)</title><rect x="9.8363%" y="325" width="90.0946%" height="15" fill="rgb(244,29,21)" fg:x="23044" fg:w="211070"/><text x="10.0863%" y="335.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (211,070 samples, 90.09%)</title><rect x="9.8363%" y="309" width="90.0946%" height="15" fill="rgb(220,130,37)" fg:x="23044" fg:w="211070"/><text x="10.0863%" y="319.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (211,070 samples, 90.09%)</title><rect x="9.8363%" y="293" width="90.0946%" height="15" fill="rgb(211,67,2)" fg:x="23044" fg:w="211070"/><text x="10.0863%" y="303.50">core::ops::function::FnOnce::call_once</text></g><g><title>soft::main (211,070 samples, 90.09%)</title><rect x="9.8363%" y="277" width="90.0946%" height="15" fill="rgb(235,68,52)" fg:x="23044" fg:w="211070"/><text x="10.0863%" y="287.50">soft::main</text></g><g><title>&lt;sdl2::render::Canvas&lt;T&gt; as sdl2::gfx::primitives::DrawRenderer&gt;::line (56 samples, 0.02%)</title><rect x="99.9407%" y="501" width="0.0239%" height="15" fill="rgb(246,142,3)" fg:x="234137" fg:w="56"/><text x="100.1907%" y="511.50"></text></g><g><title>sdl2::render::Canvas&lt;T&gt;::output_size (72 samples, 0.03%)</title><rect x="99.9654%" y="501" width="0.0307%" height="15" fill="rgb(241,25,7)" fg:x="234195" fg:w="72"/><text x="100.2154%" y="511.50"></text></g><g><title>anon.a4c1d0ca8b94038a3a603661cf75e50a.10.llvm.11768351448753903456 (156 samples, 0.07%)</title><rect x="99.9309%" y="533" width="0.0666%" height="15" fill="rgb(242,119,39)" fg:x="234114" fg:w="156"/><text x="100.1809%" y="543.50"></text></g><g><title>soft::main (156 samples, 0.07%)</title><rect x="99.9309%" y="517" width="0.0666%" height="15" fill="rgb(241,98,45)" fg:x="234114" fg:w="156"/><text x="100.1809%" y="527.50"></text></g><g><title>all (234,276 samples, 100%)</title><rect x="0.0000%" y="565" width="100.0000%" height="15" fill="rgb(254,28,30)" fg:x="0" fg:w="234276"/><text x="0.2500%" y="575.50"></text></g><g><title>soft (234,276 samples, 100.00%)</title><rect x="0.0000%" y="549" width="100.0000%" height="15" fill="rgb(241,142,54)" fg:x="0" fg:w="234276"/><text x="0.2500%" y="559.50">soft</text></g></svg></svg>